##################################################
#
# Protocol File
#
# Protocol file for Keithley 2400
# Diamond Light Source, July 2008
#
# NOTES:
#
# 
#
##################################################


##################################################
# General Settings
##################################################

ReplyTimeout = 1000;


###################################################
# Get functions
###################################################

# /// Read the device ID (only displays 39 chars)
getID {
   ExtraInput = Ignore;
   out "*IDN?";
   in "%39c";
}

# /// Read the voltage from the data string. Format is %f (V), %f (I), %f (R), %f (Timestamp), %f (Status)
get_V {
   ExtraInput = Ignore;
   out ":READ?";
   in "%f,%*f,%*f";
}

# /// Read the current from the data string. Format is %f (V), %f (I), %f (R), %f (Timestamp), %f (Status)
get_I {
   ExtraInput = Ignore;
   out ":READ?";
   in "%*f,%f,%*f";
}

# /// Get the voltage compliance
get_V_COMPLIANCE {
   ExtraInput = Ignore;
   out ":SENS:VOLT:PROT?";
   in "%f";
}

# /// Get the current compliance
get_I_COMPLIANCE {
   ExtraInput = Ignore;
   out ":SENS:CURR:PROT?";
   in "%f";
}

# /// Read the resistance from the data string. Format is %f (V), %f (I), %f (R), %f (Timestamp), %f (Status)
get_R {
   ExtraInput = Ignore;
   out ":READ?";
   in "%*f,%*f,%f";
}

# /// Get the output mode (ON/OFF)
get_OUTPUT_MODE {
   ExtraInput = Ignore;
   out ":OUTP?";
   in "%i";
}

# /// Get offset compensation (ON/OFF)
get_OFFSET_MODE {
   ExtraInput = Ignore;
   out ":SENS:RES:OCOM?";
   in "%i";
}

# /// Get Ohms (resistance) mode AUTO/MANUAL
get_RES_MODE {
   ExtraInput = Ignore;
   out ":SENS:RES:MODE?";
   in "%{MAN|AUTO}";
}

# /// Get remote sensing ON/OFF
get_SENSING_MODE {
   ExtraInput = Ignore;
   out ":SYST:RSEN?";
   in "%i";
}

# /// Get resistance sensor range AUTO/MANUAL
get_RES_RANGE_MODE {
   ExtraInput = Ignore;
   out ":SENS:RES:RANG:AUTO?";
   in "%i";
}

# /// Get resistance source mode
get_SOURCE_MODE {
   ExtraInput = Ignore;
   out ":SOUR:FUNC?";
   in "%{CURR|VOLT}";
}

# /// Get resistance measurement range
get_RES_RANGE {
   ExtraInput = Ignore;
   out ":SENS:RES:RANG?";
   in "%f";
}

#######################################################
# Set functions
#######################################################

# /// Reset the defaults
set_RESET {
   out "*RST";
}

# /// Control the output (ON/OFF)
set_OUTPUT_MODE {
   out ":OUTP %i";
}

# /// Set offset compensation (ON/OFF)
set_OFFSET_MODE {
   out ":SENS:RES:OCOM %i";
}

# /// Get Ohms (resistance) mode AUTO/MANUAL
set_RES_MODE {
   out ":SENS:RES:MODE %{MAN|AUTO}";
}

# /// Set remote sensing ON/OFF
set_SENSING_MODE {
   out ":SYST:RSEN %i";
}

# /// Set resistance auto range ON/OFF
set_RES_RANGE_MODE {
   out ":SENS:RES:RANG:AUTO %i";
}

# /// Set resistance measurement range
set_RES_RANGE {
   out ":SENS:RES:RANG %f";
}

# /// Set resistance manual mode
set_SOURCE_MODE {
   out ":SOUR:FUNC %{CURR|VOLT}";
}

# /// Set current compliance
set_I_COMPLIANCE {
   out ":SENS:CURR:PROT %f";
}

# /// Set voltage compliance
set_V_COMPLIANCE {
   out ":SENS:VOLT:PROT %f";
}

# /// Set source voltage
set_V_SOURCE {
   out ":SOUR:VOLT:LEV %f";
   }

# /// Read source voltage back
get_V_SOURCE {
   out ":SOUR:VOLT:LEV?";
   in "%f";
   }

# /// Set source current
set_I_SOURCE {
   out ":SOUR:CURR:LEV %f";
   }

# /// Read source current back
get_I_SOURCE {
   out ":SOUR:CURR:LEV?";
   in "%f";
   }

# /// Set auto ranging for source mode
set_V_SOURCE_AUTORANGE {
   out ":SOUR:VOLT:RANG:AUTO %i";
   }

# /// Set auto ranging status for source current
set_I_SOURCE_AUTORANGE {
   out ":SOUR:CURR:RANG:AUTO %i";
   }

# /// Get auto ranging status for source current
get_I_SOURCE_AUTORANGE {
   out ":SOUR:CURR:RANG:AUTO?";
   in "%i";
   }

#############################################################
# Generic protocol
############################################################

# /// Use this send any command and get back the response (max 60 chars).
gen {
    ExtraInput = Ignore;
    out "%(\$1.VAL)s"; 
    in "%60c"
}
